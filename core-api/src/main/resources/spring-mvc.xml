<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd
					    http://www.springframework.org/schema/aop 
					    http://www.springframework.org/schema/aop/spring-aop.xsd">
	<context:property-placeholder location="classpath:*.properties" ignore-unresolvable="true" file-encoding="utf-8"/>
	<aop:aspectj-autoproxy proxy-target-class="false"/>
	<context:annotation-config />

	<context:component-scan base-package="com.stock.mqservice.mqservice.controller" />
	<!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"></mvc:mapping>
            <bean class="com.houbank.xloan.api.interceptor.LogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors> -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!--使用GsonConvertor 排在默认JacksonConvertor前作为application/json序列化转换器 -->
			<ref bean="gsonHttpMessageConverter"></ref>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	
	<!-- Aop拦截Controller配置，放在spring-monitor.xml中未生效，放在spring-mvc.xml中生效 -->
	<!-- 日志监控-step 1:拦截Controller包中的所有被RequestMapping注解的方法 
	<aop:config proxy-target-class="true">
		<aop:pointcut id="logMethodPointcut" expression="(@annotation(org.springframework.web.bind.annotation.RequestMapping) and execution(* com.houbank.xloan.api.controller.*.*(..)))" />
		<aop:advisor advice-ref="interceptorChain" pointcut-ref="logMethodPointcut" order="2" />
	</aop:config>
	-->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 表示用来解析request请求的默认编码格式，当没有指定的时候根据Servlet规范会使用默认值ISO-8859-1 -->
		<property name="defaultEncoding" value="utf-8"></property>
		<!-- 设置允许上传的最大文件大小，以字节为单位计算。当设为-1时表示无限制，默认是-1 upload size limit 31*1024*1024 -->
		<property name="maxUploadSize" value="32505856"></property>
		<!-- 设置在文件上传时允许写到内存中的最大值，以字节为单位计算，默认是10240 -->
		<property name="maxInMemorySize" value="40960"></property>
		<!--推迟文件解析，先在controller中抛出文件大小异常-->
		<property name="resolveLazily" value="true"/>
	</bean>

	<!-- 将 springSwaggerConfig加载到spring容器 -->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
</beans>
